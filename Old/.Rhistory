fdic2 = tapply(Psi[,eje2],data[,18],mean)
split = length(fdic1)/2 + 1
end_ind = length(fdic1)
text(fdic1[split:end_ind],fdic2[split:end_ind],labels=levels(factor(data[,18]))[split:end_ind],col=seguentColor,
cex=0.6)
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
groups <- list(c(2:5), c(2,11:13), c(2,14), c(2,17), c(2,18), c(2,20))
for(j in 1:length(groups)){
colors <- c("red", "blue", "darkgreen", "black")
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-2,2), ylim = c(-0.5,0.5),
xlab = "Economic stability", ylab='# Family members')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# Chunk 1
library(car)
# Chunk 2
df <- read.csv("2. Bank-India-preprocessed-data.csv")
data = df
for (i in c(2:5,11:14,17:18,20)) {
data[,i] <- factor(data[,i])
}
summary(data)
# Chunk 3
# Here we can see the output of the PCA
numeriques <- which(sapply(data,is.numeric))
# We don't include id for the analysis
numeriques = numeriques[-1]
dcon <- data[,numeriques]
sapply(dcon,class)
pc1 <- prcomp(dcon, scale=TRUE)
pc1
# Chunk 4
numeriques
# Chunk 5
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,40))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
# Chunk 6
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Accumulated inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
abline(80,0, col = "blue", lwd = 2, lty = 2)
# Chunk 7
# Select only 4 components
nd = 4
Psi = pc1$x[,1:nd]
# STORAGE OF LABELS FOR INDIVIDUALS AND VARIABLES
iden = row.names(dcon)
etiq = names(dcon)
ze = rep(0,length(etiq)) # WE WILL NEED THIS VECTOR AFTERWARDS FOR THE GRAPHICS
# PLOT OF INDIVIDUALS
#Select the component to be plot on our axis
eje1<-1
eje2<-3
# Here is were we create the shadows
plot(Psi[,eje1],Psi[,eje2], type="n")
text(Psi[,eje1],Psi[,eje2],labels=iden, cex=0.5)
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Projection of variables
# Correlation between original variables and the principal components
Phi = cor(dcon,Psi)
#select our axes
X<-Phi[,eje1]
Y<-Phi[,eje2]
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
# Chunk 8
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0,1), ylim = c(-1, 1),
xlab = "Economic stability", ylab='# Family members', main =
"Numerical Variables on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.8)
text(-0.65,-0.7,
substitute(paste(italic('Note: "price" and "credit" share almost the same space')))
,col="red", cex=0.8)
# "price" and "credit" overlap because one is the price of the good to purchase, while credit is the loan the client requests.
# Chunk 9
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0.7,1), ylim = c(-0.2, 0.2),
xlab = "Economic stability", ylab='# Family members', main =
"Numerical Variables on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
# Check that there are not more variables aggregated close to "loan"
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0.94,0.96), ylim = c(0.02, 0.05),
xlab = "Economic stability", ylab='# Family members', main =
"Price and credit on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
# Chunk 10
# Adding the target variable (index=2)
varcat<-factor(data[,2])
fdic1 = tapply(Psi[,eje1],varcat,mean)
fdic2 = tapply(Psi[,eje2],varcat,mean)
varcat=factor(data[,2])
plot(Psi[,1],Psi[,2], pch=c(20,20) [varcat], col=c("darkblue", "red") [varcat],
xlab = "Economic stability", ylab='# Family members', main =
"Individuals on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F, col="black")
axis(side=3, pos= 0, labels = F, col="black")
axis(side=2, pos= 0, labels = F, col="black")
axis(side=4, pos= 0, labels = F, col="black")
legend("bottomleft",levels(factor(varcat)),pch=c(20,20),col=c("darkblue", "red"), cex=0.6)
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "green"),
cex=0.7)
# Chunk 11
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1),
xlab = "Economic stability", ylab='# Family members', main =
"Target on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="lightgray", cex=0.8)
# Chunk 12
dcat <- c(2:5,11:14,17:18,20)
colors<-rainbow(length(dcat))
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim= c(-2,2), ylim = c(-1,1))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="lightgray", cex=0.8)
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
# Chunk 13
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3),
xlab = "Economic stability", ylab='# Family members', main =
"Modalities on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
groups <- list(c(2:5), c(2,11:13), c(2,14), c(2,17), c(2,18), c(2,20))
for(j in 1:length(groups)){
colors <- c("red", "blue", "darkgreen", "black")
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-2,2), ylim = c(-0.5,0.5),
xlab = "Economic stability", ylab='# Family members')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# Chunk 1
library(car)
# Chunk 2
df <- read.csv("2. Bank-India-preprocessed-data.csv")
data = df
for (i in c(2:5,11:14,17:18,20)) {
data[,i] <- factor(data[,i])
}
summary(data)
# Chunk 3
# Here we can see the output of the PCA
numeriques <- which(sapply(data,is.numeric))
# We don't include id for the analysis
numeriques = numeriques[-1]
dcon <- data[,numeriques]
sapply(dcon,class)
pc1 <- prcomp(dcon, scale=TRUE)
pc1
# Chunk 4
numeriques
# Chunk 5
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,40))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
# Chunk 6
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Accumulated inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
abline(80,0, col = "blue", lwd = 2, lty = 2)
# Chunk 7
# Select only 4 components
nd = 4
Psi = pc1$x[,1:nd]
# STORAGE OF LABELS FOR INDIVIDUALS AND VARIABLES
iden = row.names(dcon)
etiq = names(dcon)
ze = rep(0,length(etiq)) # WE WILL NEED THIS VECTOR AFTERWARDS FOR THE GRAPHICS
# PLOT OF INDIVIDUALS
#Select the component to be plot on our axis
eje1<-1
eje2<-3
# Here is were we create the shadows
plot(Psi[,eje1],Psi[,eje2], type="n")
text(Psi[,eje1],Psi[,eje2],labels=iden, cex=0.5)
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Projection of variables
# Correlation between original variables and the principal components
Phi = cor(dcon,Psi)
#select our axes
X<-Phi[,eje1]
Y<-Phi[,eje2]
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0,1), ylim = c(-1, 1),
xlab = "Economic stability", ylab='# Family members', main =
"Numerical Variables on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.8)
text(-0.65,-0.7,
substitute(paste(italic('Note: "price" and "credit" share almost the same space')))
,col="red", cex=0.8)
# "price" and "credit" overlap because one is the price of the good to purchase, while credit is the loan the client requests.
summary/Psi)
summary(Psi)
summary(pc1)
pc1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
library(arules)
library("arulesViz")
library(dplyr)
library(ggplot2)
library(Hmisc)
dd <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
setwd("~/")
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
library(arules)
library("arulesViz")
library(dplyr)
library(ggplot2)
library(Hmisc)
dd <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
setwd("~/GitHub/bank_india")
# Chunk 1
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
# Chunk 2
library(arules)
library("arulesViz")
library(dplyr)
library(ggplot2)
library(Hmisc)
dd <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
#Selecting categorical variables
dcat<-dd[,sapply(dd, is.factor)]
# Chunk 3
dtrans<-as(dcat, "transactions")
foo<-function(x){length(levels(x))}
sum(sapply(dcat, foo))
#Checking our transactional database
dtrans
inspect(head(dtrans,10))
summary(dtrans)
itemFrequencyPlot(dtrans, topN=10, main ="Top 10 frequent itemsets", ylim = c(0,1))
itemFrequencyPlot(dtrans, support = 0.5, main ="Top 10 frequent itemsets", ylim = c(0,1))
# Chunk 4
ecl = eclat(dtrans)
size_eclat = size(ecl)
data.frame(size_eclat) %>%
ggplot(aes(x = size_eclat)) +
geom_histogram() +
labs(title = "ECLAT: Distribution of the size of the transactions",
x = "Size", y = "Frequency") +
theme_bw() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 8))
# Chunk 5
rules <- apriori(dtrans, parameter =
list(support = 0.01, confidence = 0.7, minlen=2, maxlen = 11))
good.rules <- subset(rules, subset = lift > 1)
# Remove redundant rules
nonredundant <- good.rules[!is.redundant(good.rules),]
summary(nonredundant)
inspect(head(nonredundant,n=10, by="lift"))
length(good.rules)
length(nonredundant)
good.rules <- nonredundant
# Chunk 6
df.rules <- DATAFRAME(good.rules)
plot(sort(df.rules$support, decreasing = TRUE), type = "l", main = 'Rules and support', ylab = 'Minimum support')
minor.tick(ny = 2, tick.ratio = 0.5)
abline(h=0.01, col="red", lty = 3, lwd = 2)
# Chunk 7
# Note that setting an smaller support does not provide more good rules
rules <- apriori(dtrans, parameter =
list(support = 0.01, confidence = 0.7, minlen=2, maxlen = 11))
good.rules <- subset(rules, subset = lift > 3)
nonredundant <- good.rules[!is.redundant(good.rules),]
# Save the rules
# write.csv(DATAFRAME(nonredundant))
# Chunk 8
# Explore and plot the rules
library(colourvalues)
length(nonredundant)
# inspect(head(nonredundant, n=80, by="lift"))
plot(nonredundant, measure = c("support", "lift"), shading = "confidence", colors = c( 'red', 'blue', 'green'), interactive = FALSE)
# Chunk 9
pensioners = which(dcat$job_stat=="Pensioner")
unk_jobtype = which(dcat$job_type=="Jobtype_Unknown")
setdiff(pensioners, unk_jobtype)
setdiff(unk_jobtype, pensioners)
inspect(sort(good.rules, by="lift")[9:30,])
# Many rules associate people with unknown occupation and pensioners. Let's
# look at their setdiff()
unk_occupation <- which(dcat$occupation == "Occupation_Unknown")
setdiff(pensioners, unk_occupation)
setdiff(unk_occupation, pensioners)
length(setdiff(unk_occupation, pensioners))
# All pensioners declared their occupation as unknown. However, 675 individuals
# didn't tell their occupation and weren't pensioners.
# Chunk 10
unk.occup.not.pensioner <- subset(good.rules, subset =
lhs %in% "occupation=Occupation_Unknown" &
!(rhs %in% "job_stat=Pensioner") &
!(rhs %in% "job_type=Jobtype_Unknown"))
inspect(head(unk.occup.not.pensioner, n=10, by="lift"))
unk.occup.not.pensioner2 <- subset(good.rules, subset =
lhs %in% "occupation=Occupation_Unknown" &
!(rhs %in% "job_stat=Pensioner") &
!(rhs %in% "job_type=Jobtype_Unknown") &
size(lhs) <= 1)
inspect(head(unk.occup.not.pensioner2, n=10, by="lift"))
# We'll try now to reverse the rules
unk.occup.not.pensioner3 <- subset(good.rules, subset =
rhs %in% "occupation=Occupation_Unknown" &
!(lhs %in% "job_stat=Pensioner") &
!(lhs %in% "job_type=Jobtype_Unknown") &
size(lhs) <= 5)
inspect(head(unk.occup.not.pensioner2, n=10, by="lift"))
unk.occup.not.pensioner4 <- subset(good.rules, subset =
rhs %in% "occupation=Occupation_Unknown" &
!(lhs %in% "job_stat=Pensioner") &
!(lhs %in% "job_type=Jobtype_Unknown") &
size(lhs) <= 4)
inspect(head(unk.occup.not.pensioner4, n=10, by="lift"))
# We can't describe in a confident and simple way the individuals with unknown
# occupation who aren't pensioners
# Chunk 11
# We'll study now the simplest rules
rules2 <- apriori(dtrans, parameter =
list(support = 0.01, confidence = 0.7, minlen=2, maxlen = 2))
good.rules2 <- subset(rules2, subset = lift > 1)
inspect(head(good.rules2, n=10, by = "lift"))
# Highest lift rules are trivial, since they relate people with the same
# occupation and job_type. This was expected because these variables tell a
# similar information
# Before doing any feature selection, let us remove redundant rules
nonredundant2 <- good.rules2[!is.redundant(good.rules2),]
summary(nonredundant2)
inspect(head(nonredundant2,n=10, by="lift"))
length(good.rules2)
length(nonredundant2)
good.rules2 <- nonredundant2
inspect(head(good.rules2, n=25, by="lift"))
# With these simple rules, we are able to describe better our individuals by
# gender and the jobs that make job_stat=Working up. Other categories we understand
# better now are car=N and studies = Secondary education.
# However, these rules are not relevant for our goals in this analysis. Moreover,
# none of them have a big lift value.
# Chunk 12
top10 <- sort(nonredundant, by="lift")[1:10]
plot(top10, method="grouped", shading = "lift")
# Chunk 13
rules <- apriori(dtrans, parameter =
list(support = 0.01, confidence = 0.7, minlen=2, maxlen = 11))
good.rules <- subset(rules, subset = lift > 1)
payedRules <- sort(subset(good.rules, subset = rhs %in% "target=payed"), by = "lift")
summary(payedRules)
inspect(head(payedRules, by="lift"))
# Chunk 14
# Plot the rules
plot(payedRules, measure=c("support", "confidence"), shading="lift",
main = 'Association rules (8266) with payers in the rhs') + theme(legend.position = "bottom")
# Chunk 15
payedRules2 <- sort(subset(good.rules, subset = (lhs %in% "target=payed" & lift > 3)), by = "lift")
inspect(head(payedRules2, n=10, by="lift"))
# We can try to filter, removing "jobtype unknown" and "medicine" that are trivial rules
payedRules2 <- sort(subset(good.rules, subset = (lhs %in% "target=payed" & !(rhs %in% "job_type=Medicine") & !(rhs %in% "job_type=Jobtype_Unknown") & !(lhs %in% "job_type=Jobtype_Unknown") & lift > 3), by = "lift"))
inspect(head(payedRules2, n=10, by="lift"))
# Chunk 16
plot(payedRules2, measure=c("support", "confidence"), shading="lift",
color = c('blue', 'lightblue'), main = 'Association rules (3570) with payers in the lhs') + theme(legend.position = "bottom")
# Chunk 17
overdueRules <- sort(subset(good.rules, subset = rhs %in% "target=overdue"), by = "lift")
summary(overdueRules)
# Chunk 18
# Note that setting an smaller support does not provide more good rules
rules2 <- apriori(dtrans, parameter =
list(support = 0.001, confidence = 0.7, minlen=2, maxlen = 11))
good.rules2 <- subset(rules2, subset = lift > 3)
nonredundant2 <- good.rules2[!is.redundant(good.rules2),]
length(nonredundant2)
overdueRules2 <- subset(nonredundant2, subset =
(rhs %in% "target=overdue"))
# Note: even if there are good rules the support is too low, so if they exist,
# are very rare and, then, not useful to predict the people that did not pay
# Chunk 19
overdueRules3 <- sort(subset(good.rules, subset = (lhs %in% "target=overdue" &
lift > 2), by = "lift"))
inspect(head(overdueRules3, by="lift"))
#plot(overdueRules3, measure = c("support", "lift"), shading = "confidence")
plot(overdueRules3, method="graph", shading = "lift") + theme(plot.background = element_rect(fill='transparent', color=NA))
dtrans<-as(dcat, "transactions")
foo<-function(x){length(levels(x))}
sum(sapply(dcat, foo))
#Checking our transactional database
dtrans
inspect(head(dtrans,10))
summary(dtrans)
