legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2), c(11), c(2))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
a.dim = c(8, 6)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2), c(11), c(2))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3),
dim = c(8, 6))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2), c(11), c(2))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
a.dim = c(8, 6)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2:5), c(11:14), c(17), c(18), c(20))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
a.dim = c(8, 6)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2:5), c(11:14))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
a.dim = c(8, 6)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2:5), c(11), c(2))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
a.dim = c(8, 6)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
groups <- list(c(2:5), c(11), c(2))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), c(11:14), c(17), 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# From the previous plot, check where the centroids of "paid" and "overdue" are
varcat<-factor(data[,20])
fdic1 = tapply(Psi[,eje1],varcat,mean)
fdic2 = tapply(Psi[,eje2],varcat,mean)
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
# From the previous plot, check where the centroids of "paid" and "overdue" are
varcat<-factor(data[,2])
fdic1 = tapply(Psi[,eje1],varcat,mean)
fdic2 = tapply(Psi[,eje2],varcat,mean)
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), c(10:11), 14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), 11, 14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), 11:14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), c(10:11), 14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "p", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), c(11:13), 14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "p", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# As there are too much variables its important to do several maps that will
# share the same length of the axis to be comparable visually
# Note: There is a bug in the visualization. The last plot seams smaller
# but when you save the figure all of them have the same size
groups <- list(c(2:5), c(11:13), 14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
plot(Psi[,eje1],Psi[,eje2],type="n",xlim=c(-1,1), ylim=c(-3,1))
#plot(X,Y,type="none",xlim=c(min(X,0),max(X,0)))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
plot(Psi[,eje1],Psi[,eje2], type="n")
#text(Psi[,eje1],Psi[,eje2],labels=iden, cex=0.5)
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Zoom to see the aggregated variables among the negative first component
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(-1,-0.7), ylim = c(-0.2, 0.2))
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(-1,1), ylim = c(-1, 1))
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
# Numerical variables and centroids of desired categorical variables
plot(Psi[,eje1],Psi[,eje2],type="n",xlim=c(-1,0.05), ylim=c(-1,1))
#plot(X,Y,type="none",xlim=c(min(X,0),max(X,0)))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
# Numerical variables and centroids of desired categorical variables
plot(Psi[,eje1],Psi[,eje2],type="n",xlim=c(-1,0.05), ylim=c(-1,1))
#plot(X,Y,type="none",xlim=c(min(X,0),max(X,0)))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
c<-1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
#points(fdic1,fdic2,pch=16,col=seguentColor, labels=levels(dd[,k]))
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
# Numerical variables and centroids of desired categorical variables
# Several maps are created to see relations
groups <- list(c(2:5), c(11:13), 14, 17, 18, 20)
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# Numerical variables and centroids of desired categorical variables
# Several maps are created to see relations
groups <- list(c(2:5), c(11:13))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-3,2), ylim = c(-2,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# Numerical variables and centroids of desired categorical variables
# Several maps are created to see relations
groups <- list(c(2:5), c(11:13))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-1.5,2), ylim = c(-1,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
# Numerical variables and centroids of desired categorical variables
# Several maps are created to see relations
groups <- list(c(2:5), c(11:13))
for(j in 1:length(groups)){
colors <- rainbow(length(groups))
a = plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-1,2), ylim = c(-1,3))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
#add projections of numerical variables in background
arrows(ze, ze, X, Y, length = 0.07,col="lightgray")
text(X,Y,labels=etiq,col="gray", cex=0.7)
# Loop to add all categories of this group
c <- 1
for(k in groups[[j]]){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor,
cex=0.6)
c <- c+1
}
legend("bottomleft",names(data)[groups[[j]]],pch=1,col=colors, cex=0.6)
}
