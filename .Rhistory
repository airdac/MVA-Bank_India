# Chunk 1
library(MASS)
library(biotools)
library(candisc)
library(ROSE)
library(ggplot2)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
data <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
setwd("~/GitHub/bank_india")
# Chunk 1
library(MASS)
library(biotools)
library(candisc)
library(ROSE)
library(ggplot2)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
data <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
summary(data)
# Pick those numerical features
numeriques <- which(sapply(data,is.numeric))
# We don't include id for the analysis
numeriques = numeriques[-1]
dcon <- data[,c(2,numeriques)]
# Chunk 1
library(MASS)
library(biotools)
library(candisc)
library(ROSE)
library(ggplot2)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
data <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
setwd("~/GitHub/bank_india")
# Chunk 1
library(MASS)
library(biotools)
library(candisc)
library(ROSE)
library(ggplot2)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
data <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
# Chunk 1
library(MASS)
library(biotools)
library(candisc)
library(ROSE)
library(ggplot2)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
data <- read.table("2. Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
summary(data)
# Here we can see the output of the PCA
# Pick those numerical features
numeriques <- which(sapply(data,is.numeric))
# We don't include id for the analysis
numeriques = numeriques[-1]
dcon <- data[,c(2,numeriques)]
# As in the previous reported mentioned, our dataset are unbalanced
table(dcon$target)
# There are 4572 payed observation, while only 427 overdue are observed.
# The overdue sample only weight 8,5% among the total observation.
dcon
# As in the previous reported mentioned, our dataset are unbalanced
table(dcon$target)
summary(data_under_balanced)
# Let's check the first model with all the numerical variables included.
target.lda_under = lda(target~., data = data_under_balanced); target.lda_under
# Chunk 1
library(MASS)
library(biotools)
library(candisc)
library(ROSE)
library(ggplot2)
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
data <- read.table("2. Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
# Chunk 3
summary(data)
# Here we can see the output of the PCA
# Pick those numerical features
numeriques <- which(sapply(data,is.numeric))
# We don't include id for the analysis
numeriques = numeriques[-1]
dcon <- data[,c(2,numeriques)]
# As in the previous reported mentioned, our dataset are unbalanced
table(dcon$target)
# There are 4572 payed observation, while only 427 overdue are observed.
# The overdue sample only weight 8,5% among the total observation.
# Chunk 4
# We will undersampling our dataset to 854 record, then the observation will be equivalent
data_under_balanced <- ovun.sample(target ~ ., dcon, method = "under", N = 854, seed = 1)$data
summary(data_under_balanced)
# Let's check the first model with all the numerical variables included.
target.lda_under = lda(target~., data = data_under_balanced); target.lda_under
# Let's check the first model with all the numerical variables included.
target.lda_under = lda(target~., data = data_under_balanced); target.lda_under
# It only return LD1, as there is only two group of result, paid or overdue.
# Let's check the first model with all the numerical variables included.
target.lda_under = lda(target~., data = data_under_balanced); target.lda_under
# Let's check the first model with all the numerical variables included.
target.lda_under = lda(target~., data = data_under_balanced); target.lda_under
# It only return LD1, as there is only two group of result, paid or overdue.
# Let's check the first model with all the numerical variables included.
target.lda_under = lda(target~., data = data_under_balanced); target.lda_under
# With the well built, we can apply it to the original dataset.
predict.lda_under = predict(target.lda_under, dcon)
# With the well built, we can apply it to the original dataset.
predict.lda_under = predict(target.lda_under[1], dcon)
# With the well built, we can apply it to the original dataset.
predict.lda_under = predict(target.lda_under[,1], dcon)
# With the well built, we can apply it to the original dataset.
predict.lda_under = predict(target.lda_under[1,], dcon)
# With the well built, we can apply it to the original dataset.
predict.lda_under = predict(target.lda_under, dcon)
summary(predict.lda_under)
# Let's add the LDA1 component to the dataset and rename the column.
dcon[,10] = predict.lda_under$x[,1]
names(dcon)[10] = "LDA1"
dcon
