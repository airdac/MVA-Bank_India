axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1), main =
'Target on Factorial plane of PC1 and PC3')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1), xlab = 'Economic stability', ylab = 'PC3', main =
'Target on Factorial plane of PC1 and PC3')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1), xlab = 'Economic stability', ylab = 'PC3', main =
'Target on Factorial plane of PC1 and PC3')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"),
cex=0.7)
dcat <- c(2:5,11:14,17:18,20)
colors<-rainbow(length(dcat))
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-1.5,1.5), ylim = c(-.7,.7), xlab = 'Economic stability', ylab = 'PC3', main =
'Modalities on Factorial plane of PC1 and PC3')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
dcat <- c(2:5,11:14,17:18,20)
colors<-rainbow(length(dcat))
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-1.5,1.5), ylim = c(-.7,.7), xlab = 'Economic stability', ylab = 'PC3', main =
'Modalities on Factorial plane of PC1 and PC3')
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
#Select the component to be plot on our axis
eje1<-2
eje2<-3
# Here is were we create the shadows
plot(Psi[,eje1],Psi[,eje2], type="n")
text(Psi[,eje1],Psi[,eje2],labels=iden, cex=0.5)
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Projection of variables
# Correlation between original variables and the principal components
Phi = cor(dcon,Psi)
#select our axes
X<-Phi[,eje1]
Y<-Phi[,eje2]
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(-1,1), ylim = c(-0.2, 1),
main = '', xlab = '# Family members', ylab='PC3', main = "Numerical
Variables on Factorial plane of PC2 and PC3")
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(-1,1), ylim = c(-0.2, 1), xlab = '# Family members', ylab='PC3', main = "Numerical
Variables on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.8)
text(-0.65,-0.7,
substitute(paste(italic('Note: "price" and "credit" share almost the same space')))
,col="red", cex=0.8)
# "price" and "credit" overlap because one is the price of the good to purchase, while credit is the loan the client requests.
# Adding the target variable (index=2)
varcat<-factor(data[,2])
fdic1 = tapply(Psi[,eje1],varcat,mean)
fdic2 = tapply(Psi[,eje2],varcat,mean)
varcat=factor(data[,2])
plot(Psi[,eje1],Psi[,eje2], pch=c(20,20) [varcat], col=c("darkblue", "red") [varcat], xlab = '# Family members', ylab='PC3', main = "Individuals
on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="black")
axis(side=3, pos= 0, labels = F, col="black")
axis(side=2, pos= 0, labels = F, col="black")
axis(side=4, pos= 0, labels = F, col="black")
legend("bottomleft",levels(factor(varcat)),pch=c(20,20),col=c("darkblue", "red"), cex=0.6)
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "green"),
cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1))
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"), cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1), xlab = '# Family members', ylab='PC3', main = "Individuals
on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"), cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1), xlab = '# Family members', ylab='PC3', main = "Individuals
on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"), cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim= c(-1,1), ylim = c(-1,1), xlab = '# Family members', ylab='PC3', main = "Target
on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
text(fdic1,fdic2,labels=levels(varcat), col=c("green", "red"), cex=0.7)
dcat <- c(2:5,11:14,17:18,20)
colors<-rainbow(length(dcat))
plot(Psi[,eje1],Psi[,eje2], type = "n")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-2.5,2), ylim = c(-.7,.7),
xlab = "# Family members", ylab = "PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-2.5,2), ylim = c(-.7,.7),
xlab = "# Family members", ylab = "PC3", main =
"Modalities on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
plot(Psi[,eje1],Psi[,eje2], type = "n", xlim = c(-2.5,2), ylim = c(-.7,.7),
xlab = "# Family members", ylab = "PC3", main =
"Modalities on Factorial plane of PC2 and PC3")
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Loop to add all categories
c <- 1
for(k in dcat){
seguentColor<-colors[c]
fdic1 = tapply(Psi[,eje1],data[,k],mean)
fdic2 = tapply(Psi[,eje2],data[,k],mean)
text(fdic1,fdic2,labels=levels(factor(data[,k])),col=seguentColor, cex=0.6)
c<-c+1
}
legend("bottomleft",names(data)[dcat],pch=1,col=colors, cex=0.6)
# Select only 4 components
nd = 4
Psi = pc1$x[,1:nd]
# STORAGE OF LABELS FOR INDIVIDUALS AND VARIABLES
iden = row.names(dcon)
etiq = names(dcon)
ze = rep(0,length(etiq)) # WE WILL NEED THIS VECTOR AFTERWARDS FOR THE GRAPHICS
# PLOT OF INDIVIDUALS
#Select the component to be plot on our axis
eje1<-1
eje2<-2
# Here is were we create the shadows
plot(Psi[,eje1],Psi[,eje2], type="n")
text(Psi[,eje1],Psi[,eje2],labels=iden, cex=0.5)
axis(side=1, pos= 0, labels = F, col="cyan")
axis(side=3, pos= 0, labels = F, col="cyan")
axis(side=2, pos= 0, labels = F, col="cyan")
axis(side=4, pos= 0, labels = F, col="cyan")
# Projection of variables
# Correlation between original variables and the principal components
Phi = cor(dcon,Psi)
#select our axes
X<-Phi[,eje1]
Y<-Phi[,eje2]
plot(Psi[,eje1],Psi[,eje2],type="n")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0.94,0.96), ylim = c(0.02, 0.05),
xlab = "Economic stability", ylab='# Family members', main =
"Numerical Variables on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
plot(Psi[,eje1],Psi[,eje2],type="n", xlim = c(0.94,0.96), ylim = c(0.02, 0.05),
xlab = "Economic stability", ylab='# Family members', main =
"Price and credit on Factorial plane of PC1 and PC2")
axis(side=1, pos= 0, labels = F)
axis(side=3, pos= 0, labels = F)
axis(side=2, pos= 0, labels = F)
axis(side=4, pos= 0, labels = F)
arrows(ze, ze, X, Y, length = 0.07,col="blue")
text(X,Y,labels=etiq,col="darkblue", cex=0.7)
100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]
barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2])
text(x,y+2,labels=as.character(y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2])
text(barplot_x,barplot_y+2,labels=as.character(y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2])
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)")
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = 40)
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = (0,40)
barplot_x <- barplot(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,40))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,40))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- NULL
barplot_y <- NULL
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+2,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,105))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
```{r}
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
abline(80,0, col = "blue", lwd = 2, lty = 2)
barplot_x <- barplot(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2], main =
'Accumulated inertia of principal components',
names.arg = c("PC1", "PC2", "PC3", "PC4", "PC5",
"PC6", "PC7", "PC8"), ylab = "Accumulated inertia (%)", ylim = c(0,110))
axis(side=2, at=(seq(0, 100, by=10)), labels = FALSE)
barplot_y <- round(as.matrix(100*cumsum(pc1$sdev[1:dim(dcon)[2]]^2)/dim(dcon)[2]), digits = 1)
text(barplot_x,barplot_y+5,labels=as.character(barplot_y))
abline(80,0, col = "blue", lwd = 2, lty = 2)
install.packages(c("htmlTable", "knitr", "RcppArmadillo", "sampling", "withr"))
x <- seq(0, 10)
x
x2 <- seq(1,10, 0.5)
x2
t(x)
t(t(x))
ls()
aggregate(x, by=ls(seq(1,10,2)), FUN="mean")
ls(x)
aggregate(x, by=ls(), FUN="mean")
aggregate(x, by=seq(1,10,2), FUN="mean")
aggregate(x, by=c(1,2), FUN="mean")
data(karate, package="igraphdata")
install.packages(igraphdata)
install.packages("igraphdata")
data(karate, package="igraphdata")
wc <- walktrap.community(karate)
install.packages("clustAnalytics")
library(clustAnalytics)
wc <- walktrap.community(karate)
mod <- modularity(wc)
mod
version
library(DAAG)
library(party)
library(rpart)
setwd("~/GitHub/bank_india/MVA-LAB11-BANK-INDIA D3 REPORT")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#library of Association rules
library(arules)
library("arulesViz")
#some databases that are in form of transactions --> Read arules pdf users instructions
#setwd your own working directory to import the database
#How to work with associations rules with data matrix
dd <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
setwd("~/GitHub/bank_india")
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#library of Association rules
library(arules)
library("arulesViz")
#some databases that are in form of transactions --> Read arules pdf users instructions
#setwd your own working directory to import the database
#How to work with associations rules with data matrix
dd <- read.table("2.Bank_India_preprocessed_data.csv",header=T, stringsAsFactors=TRUE, sep=",")
#Selecting categorical variables
dcat<-dd[,sapply(dd, is.factor)]
#Transforming our table as a transactional database
dtrans<-as(dcat, "transactions")
#[1] 5
foo<-function(x){length(levels(x))}
sum(sapply(dcat, foo))
#Checking our transactional database
dtrans
inspect(head(dtrans,10))
summary(dtrans)
itemFrequencyPlot(dtrans, topN=5)
itemFrequencyPlot(dtrans, support = 0.3)
# As we already knew, our target is unbalanced, so later we will rebalance
# our database to analyze the target.
#Apriori
#?apriori
#minlen : minimun number of items
rules <- apriori(dtrans, parameter =
list(support = 0.01, confidence = 0.7, minlen=2, maxlen = 11))
good.rules <- subset(rules, subset = lift > 1)
inspect(head(good.rules, n=10, by = "lift"))
# Highest lift rules are trivial, since they relate people with the same
# occupation and job_type. This was expected because these variables tell a
# similar information
# Before doing any feature selection, let us remove redundant rules
nonredundant <- good.rules[!is.redundant(good.rules),]
summary(nonredundant)
inspect(head(nonredundant,n=10, by="lift"))
length(good.rules)
length(nonredundant)
good.rules <- nonredundant
good.rules
names(good.rules)
inspect(good.rules)$support
class(inspect(good.rules))
class(inspect(good.rules))
dataframe(inspect(good.rules))
DATAFRAME(inspect(good.rules))
df.rules <- DATAFRAME(good.rules)
names(df.rules)
df.rules$support
plot(sort(df.rules$support), type="l")
plot(sort(df.rules$support, desc=TRUE), type="l")
plot(sort(df.rules$support,  decreasing = TRUE), type="l")
plot(sort(df.rules$support,  decreasing = TRUE), type="l", ymax = 0.2)
plot(sort(df.rules$support,  decreasing = TRUE), type="l", ylim = c(0,0.2))
plot(sort(df.rules$support,  decreasing = TRUE), type="l", ylim = c(0,0.05))
plot(sort(df.rules$support,  decreasing = TRUE), type="l")
plot(sort(df.rules$support,  decreasing = TRUE), type="l", ylim = c(0,0.05))
plot(sort(df.rules$support,  decreasing = TRUE), type="l")
abline(v=0.01)
abline(h=0.01)
abline(h=0.01, col="red")
abline(h=0.05, col="red")
abline(h=0.02, col="red")
abline(h=0.025, col="red")
